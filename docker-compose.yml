version: '3.9'

services:
  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    container_name: gitlab
    hostname: 'gitlab.example.com'
    #links:
    #  - "jenkins:gitlab.example.com"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.example.com'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - '80:80'
      - '443:443'
      - '56973:22'
    volumes:
      - '$GITLAB_DATA/config:/etc/gitlab'
      - '$GITLAB_DATA/logs:/var/log/gitlab'
      - '$GITLAB_DATA/data:/var/opt/gitlab'
    shm_size: '2g'

  gitlab-runner:
    image: 'gitlab/gitlab-runner:latest'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/etc/gitlab-runner
    restart: unless-stopped


  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    privileged: true
    user: root
    links:
      - "gitlab:gitlab.example.com"
    ports:
      - 8081:8080
      - 50000:50000
    volumes:
      - $JENKINS_DATA:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    links:
      - "gitlab:gitlab.example.com"
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  db:
    image: postgres:13
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

  #prometheus:
  #  image: prom/prometheus
  #  container_name: prometheus
  #  network_mode: host
  #  volumes:
  #    - $CONF/prometheus.yml:/etc/prometheus/prometheus.yml
  #  ports:
  #    - 9090:9090
  #  #links:
  #  #  - cadvisor:cadvisor
#
  #alertmanager:
  #  image: prom/alertmanager
  #  container_name: alertmanager
  #  ports:
  #    - 9093:9093
#
  #grafana:
  #  image: grafana/grafana 
  #  container_name: grafana
  #  volumes:
  #    - $GRAFANA_CONF/dashboards:/etc/grafana/provisioning/dashboards
  #    - $GRAFANA_CONF/datasources:/etc/grafana/provisioning/datasources
  #  ports:
  #    - 3000:3000
  #  environment:
  #    - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/cadavisor.json
#
  #node-exporter:
  #  image: quay.io/prometheus/node-exporter:latest
  #  container_name: monitoring_node_exporter
  #  network_mode: host
  #  pid: host
  #  restart: unless-stopped
  #  volumes:
  #    - /:/rootfs:ro
  #    - /var/run:/var/run:ro
  #    - /sys:/sys:ro
  #    - /var/lib/docker/:/var/lib/docker:ro 
  #    - /cgroup:/cgroup:ro
  #    - /etc/localtime:/etc/localtime:ro
  #  ports:
  #    - 9100:9100
#
  #cadvisor:
  #  image: gcr.io/cadvisor/cadvisor:latest
  #  container_name: monitoring_cadvisor
  #  restart: unless-stopped
  #  privileged: true
  #  volumes:
  #    - /:/rootfs:ro
  #    - /var/run:/var/run:rw
  #    - /sys:/sys:ro
  #    - /var/lib/docker:/var/lib/docker:ro
  #    - /sys/fs/cgroup:/cgroup:ro
  #    - /dev/disk/:/dev/disk:ro
  #  command:
  #    - '-housekeeping_interval=10s'
  #    - '-docker_only=true'
  #  devices:
  #    - /dev/kmsg:/dev/kmsg
  #  ports:
  #    - 8080:8080